"use strict";
var _ = require('lodash');
var gulp = require('gulp'), gutil = require('gulp-util'), iconfont = require('gulp-iconfont'), iconfontCSS = require('gulp-iconfont-css'), mergeStream = require('merge-stream');
var PLUGIN_NAME = 'ionic2-custom-icons';
function gulpCustomIcons(config) {
    // One gulp stream for each icon set
    var streams = [];
    for (var _i = 0, _a = config.iconSets; _i < _a.length; _i++) {
        var iconSet = _a[_i];
        gutil.log(PLUGIN_NAME + ': Creating custom icon set \'' + iconSet.name + '\'');
        // run gulp tasks: iconfont, iconfontCSS
        var stream = gulp.src([iconSet.src])
            .pipe(iconfontCSS({
            fontName: iconSet.name,
            cssClass: iconSet.id,
            path: config.templatePath,
            targetPath: _.template(config.scssRelPath)(iconSet),
            fontPath: config.fontRelPath
        }))
            .pipe(iconfont({
            fontName: iconSet.name,
            prependUnicode: true,
            formats: ['ttf', 'eot', 'woff', 'woff2', 'svg'],
            normalize: true,
            centerHorizontally: true,
            fontHeight: 1000
        }))
            .pipe(gulp.dest(config.fontTargetPath));
        streams.push(stream);
    }
    // return merged streams of all icon sets
    return mergeStream(streams);
}
exports.gulpCustomIcons = gulpCustomIcons;
